///////////////////////////////////////////////////////////////////////////////
///
/// @file StatisticsRecord.cpp
///
/// @brief main application entry point of StatisticsRecord.
///
/// @author Ultratronik GmbH
///         Dornierstr. 9
///         D-82205 Gilching
///         Germany
///         http://www.ultratronik.de
///
/// @author written by Gerd Esser, Forschung & Entwicklung, gesser@ultratronik.de
///
/// @date 22.03.2021
///
/// @copyright Copyright 2021 by Hemro International AG
///            Hemro International AG
///            Länggenstrasse 34
///            CH 8184 Bachenbülach
///            Switzerland
///            Homepage: www.hemrogroup.com
///
///////////////////////////////////////////////////////////////////////////////

#include "StatisticsRecord.h"

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

StatisticsRecord::StatisticsRecord()
{

}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

StatisticsRecord::StatisticsRecord(const StatisticsRecord &theRight)
    : QObject( theRight.parent() )
{
    *this = theRight;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

StatisticsRecord::~StatisticsRecord()
{

}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

StatisticsRecord &StatisticsRecord::operator=(const StatisticsRecord &theRight)
{
    if ( this != &theRight )
    {
        m_strName            = theRight.m_strName;
        m_strModeName        = theRight.m_strModeName;
        m_nPortaFilterIndex  = theRight.m_nPortaFilterIndex;
        m_u32GrindTime100ths = theRight.m_u32GrindTime100ths;
        m_u32ShotsNum        = theRight.m_u32ShotsNum;
    }

    return *this;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

int StatisticsRecord::portaFilterIndex() const
{
    return m_nPortaFilterIndex;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void StatisticsRecord::setPortaFilterIndex(int value)
{
    m_nPortaFilterIndex = value;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

const QString &StatisticsRecord::modeName() const
{
    return m_strModeName;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void StatisticsRecord::setModeName(const QString &value)
{
    m_strModeName = value;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

const QString & StatisticsRecord::name() const
{
    return m_strName;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void StatisticsRecord::setName(const QString &value)
{
    m_strName = value;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

quint32 StatisticsRecord::shotsNum() const
{
    return m_u32ShotsNum;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void StatisticsRecord::setShotsNum(const quint32 &value)
{
    m_u32ShotsNum = value;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

quint32 StatisticsRecord::grindTime100ths() const
{
    return m_u32GrindTime100ths;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void StatisticsRecord::setGrindTime100ths(const quint32 &value)
{
    m_u32GrindTime100ths = value;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

