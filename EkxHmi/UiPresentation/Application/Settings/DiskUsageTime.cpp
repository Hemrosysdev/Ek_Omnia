#include "DiskUsageTime.h"

#include <QQmlEngine>
#include <QQmlContext>

#include "EkxGlobals.h"
#include "SqliteInterface.h"

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

DiskUsageTime::DiskUsageTime(QQmlEngine *engine, SqliteInterface *sqlInterface, QObject *parent)
    : QObject(parent)
    , m_sqliteInterface(sqlInterface)
    , m_estimatedMax(500)
{
    engine->rootContext()->setContextProperty( "diskUsageTime" , this );
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

int DiskUsageTime::readX100Secs()
{
    int result = -1;
    quint32 temp;
    if( m_sqliteInterface->queryCounter(EkxSqliteTypes::SqliteCounter_DISC_USAGE_TIME, temp) )
    {
        result = temp;
    }
    return(result);
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void DiskUsageTime::reset()
{
    m_sqliteInterface->resetCounter(EkxSqliteTypes::SqliteCounter_DISC_USAGE_TIME);
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

int DiskUsageTime::getEstimatedMax()
{
    return( m_estimatedMax );
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void DiskUsageTime::setEstimatedMax(int maxHours)
{
    if( maxHours > 0)
    {
        if(m_estimatedMax != maxHours)
        {
            m_estimatedMax = maxHours;
            emit estimatedMaxChanged();
        }
    }
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////
