///////////////////////////////////////////////////////////////////////////////
///
/// @file LibraryRecipe.cpp
///
/// @brief Implementation file of class LibraryRecipe.
///
/// @author Ultratronik GmbH
///         Dornierstr. 9
///         D-82205 Gilching
///         Germany
///         http://www.ultratronik.de
///
/// @author written by Florian Sonntag, Forschung & Entwicklung, fsonntag@ultratronik.de
///
/// @date 31.03.2021
///
/// @copyright Copyright 2021 by Hemro International AG
///            Hemro International AG
///            Länggenstrasse 34
///            CH 8184 Bachenbülach
///            Switzerland
///            Homepage: www.hemrogroup.com
///
///////////////////////////////////////////////////////////////////////////////

#include "LibraryRecipe.h"

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

LibraryRecipe::LibraryRecipe( QObject *parent )
    : QObject( parent )
{
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

LibraryRecipe::~LibraryRecipe()
{
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

int LibraryRecipe::dddBigValue() const
{
    return m_nDddBigValue;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void LibraryRecipe::setDddBigValue(int nDddBigValue )
{
    if ( nDddBigValue != m_nDddBigValue )
    {
        m_nDddBigValue = nDddBigValue;

        emit dddBigValueChanged();
    }
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

int LibraryRecipe::dddCommaValue() const
{
    return m_nDddCommaValue;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void LibraryRecipe::setDddCommaValue(const int nDddCommaValue )
{
    if ( nDddCommaValue != m_nDddCommaValue )
    {
        m_nDddCommaValue = nDddCommaValue;

        emit dddCommaValueChanged();
    }
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

const QString & LibraryRecipe::beanName() const
{
    return m_strBeanName;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void LibraryRecipe::setBeanName( const QString & strBeanName )
{
    if ( strBeanName != m_strBeanName )
    {
        m_strBeanName = strBeanName;

        emit beanNameChanged();
    }
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

int LibraryRecipe::grammage1Big() const
{
    return m_nGrammage1Big;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void LibraryRecipe::setGrammage1Big(const int nGrammage1Big )
{
    if ( nGrammage1Big != m_nGrammage1Big )
    {
        m_nGrammage1Big = nGrammage1Big;

        emit grammage1BigChanged();
    }
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

int LibraryRecipe::grammage2Big() const
{
    return m_nGrammage2Big;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void LibraryRecipe::setGrammage2Big(const int nGrammage2Big )
{
    if ( nGrammage2Big != m_nGrammage2Big )
    {
        m_nGrammage2Big = nGrammage2Big;

        emit grammage2BigChanged();
    }
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

int LibraryRecipe::grammage1Comma() const
{
    return m_nGrammage1Comma;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void LibraryRecipe::setGrammage1Comma(const int nGrammage1Comma )
{
    if ( nGrammage1Comma != m_nGrammage1Comma )
    {
        m_nGrammage1Comma = nGrammage1Comma;

        emit grammage1CommaChanged();
    }
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

int LibraryRecipe::grammage2Comma() const
{
    return m_nGrammage2Comma;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void LibraryRecipe::setGrammage2Comma(const int nGrammage2Comma )
{
    if ( nGrammage2Comma != m_nGrammage2Comma )
    {
        m_nGrammage2Comma = nGrammage2Comma;

        emit grammage2CommaChanged();
    }
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

int LibraryRecipe::grammage1Icon() const
{
    return m_nGrammage1Icon;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void LibraryRecipe::setGrammage1Icon(const int nGrammage1Icon )
{
    if ( nGrammage1Icon != m_nGrammage1Icon )
    {
        m_nGrammage1Icon = nGrammage1Icon;

        emit grammage1IconChanged();
    }
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

int LibraryRecipe::grammage2Icon() const
{
    return m_nGrammage2Icon;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void LibraryRecipe::setGrammage2Icon(const int nGrammage2Icon )
{
    if ( nGrammage2Icon != m_nGrammage2Icon )
    {
        m_nGrammage2Icon = nGrammage2Icon;

        emit grammage2IconChanged();
    }
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

int LibraryRecipe::grammageCount() const
{
    return m_nGrammageCount;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void LibraryRecipe::setGrammageCount(const int nGrammageCount )
{
    if ( nGrammageCount != m_nGrammageCount )
    {
        m_nGrammageCount = nGrammageCount;

        emit grammageCountChanged();
    }
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

bool LibraryRecipe::showGrammage() const
{
    return m_bShowGrammage;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void LibraryRecipe::setShowGrammage(const bool bShowGrammage )
{
    if ( bShowGrammage != m_bShowGrammage )
    {
        m_bShowGrammage = bShowGrammage;

        emit showGrammageChanged();
    }
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void LibraryRecipe::setUuid(const QString &strUuid)
{
    if ( m_strUuid != strUuid )
    {
        m_strUuid = strUuid;
        emit uuidChanged();
    }
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

const QString &LibraryRecipe::uuid() const
{
    return m_strUuid;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////
