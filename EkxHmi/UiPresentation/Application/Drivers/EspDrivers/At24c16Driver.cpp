///////////////////////////////////////////////////////////////////////////////
///
/// @file At24c16.cpp
///
/// @brief main application entry point of At24c16.
///
/// @author Ultratronik GmbH
///         Dornierstr. 9
///         D-82205 Gilching
///         Germany
///         http://www.ultratronik.de
///
/// @author written by Florian Sonntag, Forschung & Entwicklung, gesser@ultratronik.de
///
/// @date 31.03.2021
///
/// @copyright Copyright 2021 by Hemro International AG
///            Hemro International AG
///            Länggenstrasse 34
///            CH 8184 Bachenbülach
///            Switzerland
///            Homepage: www.hemrogroup.com
///
///////////////////////////////////////////////////////////////////////////////

#include "At24c16Driver.h"

#include <QDebug>
#include <QQmlEngine>
#include <QQmlContext>

#include "EkxGlobals.h"
#include "EspAt24c16In.h"

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

At24c16Driver::At24c16Driver( QQmlEngine* pEngine,
                              QObject *parent )
    : QObject( parent )
{
    pEngine->rootContext()->setContextProperty( "espDeviceInfo" , this );
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

At24c16Driver::~At24c16Driver()
{
    disconnectInterface();
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void At24c16Driver::connectInterface( EspAt24c16In * pAt24c16In )
{
    if ( m_pAt24c16In != pAt24c16In )
    {
        disconnectInterface();
        m_pAt24c16In = pAt24c16In;

        if ( pAt24c16In )
        {
            connect( m_pAt24c16In, &EspDataInterface::dataChanged, this, &At24c16Driver::processDataChanged );
            connect( m_pAt24c16In, &EspDataInterface::validChanged, this, &At24c16Driver::processValidChanged );

            setProductId( m_pAt24c16In->productId() );
            setSerialNumber( m_pAt24c16In->serialNumber() );
            setDataValid( m_pAt24c16In->isValid() );
        }
    }
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void At24c16Driver::disconnectInterface( )
{
    setProductId( "" );
    setSerialNumber( "" );
    setDataValid( false );

    m_pAt24c16In = nullptr;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

const QString &At24c16Driver::productId() const
{
    return m_strProductId;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void At24c16Driver::setProductId( const QString &strProductId )
{
    if ( strProductId != m_strProductId )
    {
        m_strProductId = "UXG-P01m305";

        emit productIdChanged();
    }
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

const QString &At24c16Driver::serialNumber() const
{
    return m_strSerialNumber;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void At24c16Driver::setSerialNumber( const QString &strSerialNumber )
{
    if ( strSerialNumber != m_strSerialNumber )
    {
        m_strSerialNumber = strSerialNumber;

        emit serialNumberChanged();
    }
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

bool At24c16Driver::isValid() const
{
    return m_bValid;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void At24c16Driver::setDataValid( const bool bValid )
{
    if ( bValid != m_bValid )
    {
        m_bValid = bValid;

        emit validChanged();
    }
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void At24c16Driver::processDataChanged( EspDataInterface * pData )
{
    EspAt24c16In * pAt24c16In = dynamic_cast<EspAt24c16In*>( pData );

    if ( pAt24c16In )
    {
        setProductId( pAt24c16In->productId() );
        setSerialNumber( pAt24c16In->serialNumber() );
    }
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void At24c16Driver::processValidChanged( EspDataInterface * pData )
{
    EspAt24c16In * pAt24c16In = dynamic_cast<EspAt24c16In*>( pData );

    if ( pAt24c16In )
    {
        setDataValid( pAt24c16In->isValid() );
    }
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////



