///////////////////////////////////////////////////////////////////////////////
///
/// @file StatisticsBoardResult.cpp
///
/// @brief Implementation file of class StatisticsBoardResult
///
/// @author Ultratronik GmbH
///         Dornierstr. 9
///         D-82205 Gilching
///         Germany
///         http://www.ultratronik.de
///
/// @author written by Xaver Pilz, Forschung & Entwicklung, xpilz@ultratronik.de
///
/// @date 25.01.2021
///
/// @copyright Copyright 2021 by Hemro International AG
///            Hemro International AG
///            Länggenstrasse 34
///            CH 8184 Bachenbülach
///            Switzerland
///            Homepage: www.hemrogroup.com
///
///////////////////////////////////////////////////////////////////////////////

#include "StatisticsBoardResult.h"

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

StatisticsBoardResult::StatisticsBoardResult()
{

}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

StatisticsBoardResult::StatisticsBoardResult( const QString & key,
                                              const QString & value,
                                              const QString & sectionTitle,
                                              const int       portaFilterIndex,
                                              const bool      isLoading,
                                              QObject *       parent )
    : QObject( parent )
    , m_key( key )
    , m_value( value )
    , m_sectionTitle( sectionTitle )
    , m_iconIndex( portaFilterIndex )
    , m_isLoading( isLoading )
    , m_hasBar( false )
    , m_barCurrentPercentage( 0.0 )
    , m_barCriticalPercentage( 1.0 )
{

}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

QString StatisticsBoardResult::key()
{
    return m_key;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void StatisticsBoardResult::setKey( const QString & key )
{
    m_key = key;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

QString StatisticsBoardResult::value() const
{
    return m_value;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void StatisticsBoardResult::setValue( const QString & value )
{
    m_value = value;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

QString StatisticsBoardResult::sectionTitle() const
{
    return m_sectionTitle;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void StatisticsBoardResult::setSectionTitle( const QString & sectionTitle )
{
    m_sectionTitle = sectionTitle;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

int StatisticsBoardResult::iconIndex() const
{
    return m_iconIndex;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void StatisticsBoardResult::setIconIndex( const int iconIndex )
{
    m_iconIndex = iconIndex;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

bool StatisticsBoardResult::isLoading() const
{
    return m_isLoading;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void StatisticsBoardResult::setIsLoading( bool isLoading )
{
    m_isLoading = isLoading;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

bool StatisticsBoardResult::hasBar() const
{
    return m_hasBar;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void StatisticsBoardResult::setHasBar( bool hasBar )
{
    m_hasBar = hasBar;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

double StatisticsBoardResult::barCurrentPercentage() const
{
    return m_barCurrentPercentage;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void StatisticsBoardResult::setBarCurrentPercentage( double barCurrentPercentage )
{
    m_barCurrentPercentage = barCurrentPercentage;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

double StatisticsBoardResult::barCriticalPercentage() const
{
    return m_barCriticalPercentage;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

void StatisticsBoardResult::setBarCriticalPercentage( double barCriticalPercentage )
{
    m_barCriticalPercentage = barCriticalPercentage;
}

///////////////////////////////////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////////////////////////////////

